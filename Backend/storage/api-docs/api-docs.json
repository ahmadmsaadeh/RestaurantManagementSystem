{
    "openapi": "3.0.0",
    "info": {
        "title": "Restaurant Management System API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/registercustomer": {
            "post": {
                "tags": [
                    "Auth Management"
                ],
                "summary": "Register",
                "operationId": "044210a6189799b43fcbe690360b971f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "username": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            },
                                            "firstname": {
                                                "type": "string"
                                            },
                                            "lastname": {
                                                "type": "string"
                                            },
                                            "phonenumber": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "username": "John1",
                                    "email": "john@test.com",
                                    "password": "johnjohn1",
                                    "firstname": "john",
                                    "lastname": "john",
                                    "phonenumber": "0598985980"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 200
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": null
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "number",
                                                            "example": 1
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "John"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@test.com"
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2022-06-28 06:06:17"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2022-06-28 06:06:17"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "access_token": {
                                                    "properties": {
                                                        "token": {
                                                            "type": "string",
                                                            "example": "randomtokenasfhajskfhajf398rureuuhfdshk"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "Bearer"
                                                        },
                                                        "expires_in": {
                                                            "type": "number",
                                                            "example": 3600
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 422
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "message": {
                                                    "properties": {
                                                        "email": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "The email has already been taken."
                                                            },
                                                            "collectionFormat": "multi"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/feedbacks": {
            "get": {
                "tags": [
                    "Feedbacks"
                ],
                "summary": "Get list of feedbacks",
                "operationId": "7170bad27a01bc7a9c14b831fb664d17",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Feedbacks"
                ],
                "summary": "Create a new feedback",
                "operationId": "cafbb9fed2234f50ac0363d3b7f9219b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Feedback"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Feedback created successfully"
                    }
                }
            }
        },
        "/feedbacks/{id}": {
            "get": {
                "tags": [
                    "Feedbacks"
                ],
                "summary": "Get feedback by ID",
                "operationId": "228cdbfedf64b50953445817826d05f9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feedback ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Feedbacks"
                ],
                "summary": "Update feedback by ID",
                "operationId": "600380c3ae7d09e4f5d94eada38bdced",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feedback ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Feedback"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feedback updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Feedbacks"
                ],
                "summary": "Delete feedback by ID",
                "operationId": "7ef150bd995eb2c12fd6ff65df665881",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Feedback ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Feedback deleted successfully"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth Management"
                ],
                "summary": "Login",
                "operationId": "0911c92452f74c7b120a5fefd12bf37d",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {
                                        "properties": {
                                            "email": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "user@test.com",
                                    "password": "useruser1"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Valid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 200
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": null
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "number",
                                                            "example": 2
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "User"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@test.com"
                                                        },
                                                        "email_verified_at": {
                                                            "type": "string",
                                                            "example": null
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "example": "2022-06-28 06:06:17"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2022-06-28 06:06:17"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "access_token": {
                                                    "properties": {
                                                        "token": {
                                                            "type": "string",
                                                            "example": "randomtokenasfhajskfhajf398rureuuhfdshk"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "example": "Bearer"
                                                        },
                                                        "expires_in": {
                                                            "type": "number",
                                                            "example": 3600
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 401
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Invalid credentials."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth Management"
                ],
                "summary": "Logout",
                "operationId": "7f7c1e4f42737224040a26bd0bd6beb1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "": {}
                                },
                                "type": "object",
                                "example": []
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 200
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Successfully logged out"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "number",
                                                    "example": 422
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "error"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Unauthenticated."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/api/menu-items": {
            "get": {
                "tags": [
                    "MenuItems"
                ],
                "summary": "Get all menu items",
                "description": "Returns a list of all menu items",
                "operationId": "getMenuitem",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MenuItem"
                                    }
                                },
                                "example": [
                                    {
                                        "id": 5,
                                        "name_item": "Margherita Pizza",
                                        "description": "Classic cheese pizza with tomato sauce and basil.",
                                        "price": 8.99,
                                        "availability": true,
                                        "image": "margherita.jpg",
                                        "category_id": 1
                                    },
                                    {
                                        "id": 6,
                                        "name_item": "Pizza",
                                        "description": "Delicious cheese pizza",
                                        "price": 9.99,
                                        "availability": true,
                                        "image": "pizza.jpg",
                                        "category_id": 1
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "MenuItems"
                ],
                "summary": "Create a new menu item",
                "description": "Adds a new menu item to the database",
                "operationId": "createMenuItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MenuItem"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Menu item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MenuItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/menu-items/{id}": {
            "get": {
                "tags": [
                    "MenuItems"
                ],
                "summary": "Get a menu item by ID",
                "description": "Returns a single menu item by ID",
                "operationId": "getMenuItemById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the menu item to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MenuItem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/createOrder": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "operationId": "089ecff697bfa3cdb8626150ffd603b0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_items"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID of the user placing the order",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "reservation_id": {
                                        "description": "ID of the reservation for the order",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "order_items": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "menu_item_id",
                                                "quantity"
                                            ],
                                            "properties": {
                                                "menu_item_id": {
                                                    "description": "ID of the menu item",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "description": "Quantity of the menu item",
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully"
                                        },
                                        "order details": {
                                            "properties": {
                                                "user_id": {
                                                    "description": "ID of the user",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "reservation_id": {
                                                    "description": "ID of the reservation",
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "status": {
                                                    "description": "Current status of the order",
                                                    "type": "string",
                                                    "example": "Open"
                                                },
                                                "total": {
                                                    "description": "Total amount for the order",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 25.98
                                                },
                                                "order_id": {
                                                    "description": "ID of the created order",
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "created_at": {
                                                    "description": "Order creation timestamp",
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-19T16:01:16.000000Z"
                                                },
                                                "updated_at": {
                                                    "description": "Order last update timestamp",
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-08-19T16:01:17.000000Z"
                                                },
                                                "order_items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "order_item_id": {
                                                                "description": "ID of the order item",
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "order_id": {
                                                                "description": "ID of the related order",
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "menu_item_id": {
                                                                "description": "ID of the menu item",
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "quantity": {
                                                                "description": "Quantity of the menu item",
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "subtotal": {
                                                                "description": "Subtotal for this item",
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 25.98
                                                            },
                                                            "item_status": {
                                                                "description": "Status of the item",
                                                                "type": "string",
                                                                "example": "Pending"
                                                            },
                                                            "created_at": {
                                                                "description": "Item creation timestamp",
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-08-19T16:01:17.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "description": "Item last update timestamp",
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-08-19T16:01:17.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "invalid_menu_item_id": {
                                        "summary": "Invalid Menu Item ID",
                                        "value": {
                                            "error": "Invalid menu item ID"
                                        }
                                    },
                                    "invalid_quantity": {
                                        "summary": "Invalid Quantity",
                                        "value": {
                                            "error": "Invalid quantity for item"
                                        }
                                    },
                                    "user_not_associated": {
                                        "summary": "User Not Associated",
                                        "value": {
                                            "error": "The specified user is not associated with this reservation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Order creation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order creation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders/{orderId}/addMenuItem": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Add a menu item to an existing order",
                "operationId": "1b3bcbf432f722109f6570e0c9732c2f",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "menu_item_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "menu_item_id": {
                                        "description": "ID of the menu item",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "description": "Quantity of the menu item",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Menu item added to the order successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Menu item added to order successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order or menu item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "order_not_found": {
                                        "summary": "Order Not Found",
                                        "value": {
                                            "error": "Order not found"
                                        }
                                    },
                                    "menu_item_not_found": {
                                        "summary": "Menu Item Not Found",
                                        "value": {
                                            "error": "Menu item not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reports/sales-monthly": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get Monthly Sales",
                "operationId": "02e9282342b04d888ee6b320a3dc4b35",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/reports/sales-yearly": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get Yearly Sales",
                "operationId": "55bb9a6daefa6e57863f5c0534e9bc0d",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/reports/menu-item-count": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get menu item orders count",
                "operationId": "1df2b87a066215d08686e077dbc30eb3",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/reports/feedback-tracking": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get feedback tracking (average per month)",
                "operationId": "f6e12be661b8f005368271fcdc9d66dc",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/reservations/{id}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get reservations for a specific user",
                "description": "Retrieve all reservations for a user.",
                "operationId": "519ad8a845fabc240d63205ab5695f78",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservations retrieved"
                    }
                }
            }
        },
        "/reservations/{user_id}/{Date}/{time}/{numOfCustomers}/{ReservationType}": {
            "post": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Add a new reservation",
                "description": "Allows users to add a new reservation.",
                "operationId": "e6a68f82ca2c56b32e69447c0ac5011d",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "path",
                        "description": "Reservation date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "time",
                        "in": "path",
                        "description": "Reservation time",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "time"
                        }
                    },
                    {
                        "name": "numOfCustomers",
                        "in": "path",
                        "description": "Number of customers",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ReservationType",
                        "in": "path",
                        "description": "Type of reservation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reservation added"
                    }
                }
            }
        },
        "/reservations/{reservationID}": {
            "delete": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Delete a reservation",
                "description": "Allows users to delete a reservation.",
                "operationId": "9ed2605aabb14c761483129e5870d006",
                "parameters": [
                    {
                        "name": "reservationID",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation deleted"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Update a reservation",
                "description": "Allows users to update an existing reservation.",
                "operationId": "384a26ce36523200bc171e3e94631cc7",
                "parameters": [
                    {
                        "name": "reservationID",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Reservation details to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "time": {
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "numOfCustomers": {
                                        "type": "integer"
                                    },
                                    "ReservationType": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation updated"
                    }
                }
            }
        },
        "/reservations/date/{Date}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get reservations by date",
                "description": "Retrieve reservations based on the date.",
                "operationId": "1cee41396053eeac3a093736b4ed455f",
                "parameters": [
                    {
                        "name": "Date",
                        "in": "path",
                        "description": "Reservation date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservations retrieved"
                    }
                }
            }
        },
        "/reservations/date/{Date}/time/{time}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get reservations by date and time",
                "description": "Retrieve reservations based on the date and time.",
                "operationId": "6b47ea52fd490d0798f73c349be7d308",
                "parameters": [
                    {
                        "name": "Date",
                        "in": "path",
                        "description": "Reservation date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "time",
                        "in": "path",
                        "description": "Reservation time",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservations retrieved"
                    }
                }
            }
        },
        "/reservations/id/{ReservationID}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get reservation by ID",
                "description": "Retrieve a specific reservation by its ID.",
                "operationId": "2d0092b8e20c96724b1408aed41ebe66",
                "parameters": [
                    {
                        "name": "ReservationID",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation retrieved"
                    }
                }
            }
        },
        "/staff/reservations": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Staff: Get all user reservations",
                "description": "Retrieve all reservations for all users (staff only).",
                "operationId": "024c40d5fe3acdb9ea072fe870928dc5",
                "responses": {
                    "200": {
                        "description": "Reservations retrieved"
                    }
                }
            }
        },
        "/staff/reservations/{user_id}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Staff: Get all reservations for a specific user",
                "description": "Retrieve all reservations for a specific user (staff only).",
                "operationId": "7635ce66daa4e952b87993e372b94e38",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservations retrieved"
                    }
                }
            }
        },
        "/staff/reservations/date/{Date}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Staff: Get reservations by date",
                "description": "Retrieve reservations by date (staff only).",
                "operationId": "1f79fb2c119a92ab9170b127d529c9f7",
                "parameters": [
                    {
                        "name": "Date",
                        "in": "path",
                        "description": "Reservation date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservations retrieved"
                    }
                }
            }
        },
        "/staff/reservations/date/{Date}/time/{time}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Staff: Get reservations by date and time",
                "description": "Retrieve reservations by date and time (staff only).",
                "operationId": "a1b0b96596c675ab6708f8b2ef1db88b",
                "parameters": [
                    {
                        "name": "Date",
                        "in": "path",
                        "description": "Reservation date",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "time",
                        "in": "path",
                        "description": "Reservation time",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservations retrieved"
                    }
                }
            }
        },
        "/api/roles/{role_name}": {
            "get": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Get role by name",
                "operationId": "f9d964c88b482db108e45bc83f320186",
                "parameters": [
                    {
                        "name": "role_name",
                        "in": "path",
                        "description": "The name of the role to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role_name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Get all roles",
                "operationId": "1811fddab2cec2e9cd45d508ee99b560",
                "responses": {
                    "200": {
                        "description": "List of all roles"
                    },
                    "404": {
                        "description": "No roles found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No roles found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/role/{role_id}": {
            "get": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Get role by ID",
                "operationId": "a7411ff8813f469d3368a21bf145ed48",
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "description": "The ID of the role to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role_name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/create/role": {
            "post": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Create a new role",
                "operationId": "a29ccf3471d01171432679dd93515514",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "role_name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Administrator role with full permissions"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Role creation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role could not be created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/update/{role_id}": {
            "put": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Update an existing role",
                "operationId": "85c50f47c2c20104cc8c17c5d8dc82f7",
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "description": "The ID of the role to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "role_name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Administrator role with full permissions"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Role update failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role could not be updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/delete/{role_id}": {
            "delete": {
                "tags": [
                    "Role Management"
                ],
                "summary": "Delete a role",
                "operationId": "c66414e2bb4da3c2bc7734b63b2ba71f",
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "description": "The ID of the role to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Role deleted successfully"
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chef": {
            "get": {
                "tags": [
                    "Chef Management"
                ],
                "summary": "Get role by name",
                "operationId": "2ea52f9ab1e78d0c414dc0c309738de1",
                "responses": {
                    "200": {
                        "description": "Role retrieved successfully"
                    },
                    "404": {
                        "description": "Role not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get user by id",
                "operationId": "b0a4bd6db558e0572348745baa77de3f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to get it",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User got successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User got successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid user id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "users can update there information",
                "operationId": "db52232ca95ee89b3c3ed421bf014cee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "alaa"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "alaa.has@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "1212121212"
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "example": "alaa"
                                    },
                                    "firstname": {
                                        "type": "string",
                                        "example": "hasan"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid user id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete a user account by ID",
                "description": "This endpoint deletes a user account by its ID.",
                "operationId": "613639bdf459b50ecdee7a5f5b34aaf5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid user id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get all users",
                "operationId": "f2b69a142b3a47c79e32c352f5f0501c",
                "responses": {
                    "200": {
                        "description": "List of all users"
                    },
                    "404": {
                        "description": "No users found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No users found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chef/{id}": {
            "get": {
                "tags": [
                    "Chef Management"
                ],
                "summary": "Get chef by id",
                "operationId": "b7921caa0d2acaecde1cb0048e078e7f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to get it",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chef got successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chef got successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chef not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid chef id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/role/{role_id}": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "get the user by role id for admin to see all staff or customers by id",
                "operationId": "cc484c5216af145f94ad10812c654607",
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "description": "The ID of the role to be got",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User got successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User got successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid role id"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Feedback": {
                "title": "Feedback",
                "required": [
                    "order_id",
                    "menu_item_id",
                    "customer_id",
                    "rating",
                    "comments"
                ],
                "properties": {
                    "order_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "menu_item_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "customer_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "rating": {
                        "type": "integer",
                        "example": 5
                    },
                    "comments": {
                        "type": "string",
                        "example": "Great service!"
                    },
                    "date_submitted": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-18 10:00:00"
                    }
                },
                "type": "object"
            },
            "MenuItem": {
                "required": [
                    "name_item",
                    "price",
                    "availability",
                    "category_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name_item": {
                        "type": "string",
                        "example": "Pizza"
                    },
                    "description": {
                        "type": "string",
                        "example": "Delicious cheese pizza"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 12.99
                    },
                    "availability": {
                        "type": "boolean",
                        "example": true
                    },
                    "image": {
                        "type": "string",
                        "example": "pizza.jpg"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Reservation": {
                "title": "Reservation",
                "required": [
                    "UserID",
                    "Date",
                    "Time",
                    "NumOfCustomers",
                    "ReservationType",
                    "TableID",
                    "TimeExpectedToLeave"
                ],
                "properties": {
                    "UserID": {
                        "description": "The ID of the user making the reservation",
                        "type": "integer",
                        "example": 1
                    },
                    "Date": {
                        "description": "The date of the reservation",
                        "type": "string",
                        "format": "date",
                        "example": "18-08-2024"
                    },
                    "Time": {
                        "description": "The time of the reservation",
                        "type": "string",
                        "format": "time",
                        "example": "18:00:00"
                    },
                    "NumOfCustomers": {
                        "description": "The number of customers for the reservation",
                        "type": "integer",
                        "example": 4
                    },
                    "ReservationType": {
                        "description": "The type of reservation (e.g., 'Drinks', 'Food')",
                        "type": "string",
                        "example": "dine-in"
                    },
                    "TableID": {
                        "description": "The ID of the table reserved",
                        "type": "integer",
                        "example": 10
                    },
                    "TimeExpectedToLeave": {
                        "description": "The expected time for the reservation to end",
                        "type": "string",
                        "format": "time",
                        "example": "20:00:00"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Role Management",
            "description": "API Endpoints related to Role Management"
        },
        {
            "name": "User Management",
            "description": "API Endpoints related to User Management"
        },
        {
            "name": "Auth Management",
            "description": "API Endpoints related to Auth Management"
        },
        {
            "name": "Reports",
            "description": "Endpoints for generating various reports"
        },
        {
            "name": "Feedbacks",
            "description": "Feedbacks"
        },
        {
            "name": "MenuItems",
            "description": "MenuItems"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Reservations",
            "description": "Reservations"
        },
        {
            "name": "Chef Management",
            "description": "Chef Management"
        }
    ]
}